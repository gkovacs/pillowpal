// Generated by IcedCoffeeScript 1.4.0b
(function() {
  var accessPillow, root;

  root = typeof exports !== "undefined" && exports !== null ? exports : this;

  now.ready(function() {
    return FB.getLoginStatus(function(loginStatus) {
      var userid;
      if ((loginStatus == null) || (loginStatus.authResponse == null) || (loginStatus.authResponse.accessToken == null)) {
        window.location = '/auth/facebook';
        return;
      }
      userid = loginStatus.authResponse.userID;
      console.log('nowjs initialized');
      $('#username').text(userid);
      now.getStatus(userid, function(status) {
        return $('#status').text(status);
      });
      root.friendlist = [];
      return FB.api('/me/friends', function(response) {
        var friend, _i, _len, _ref;
        if ((response == null) || (response.data == null)) {
          window.location = '/auth/facebook';
        }
        _ref = response.data;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          friend = _ref[_i];
          console.log(friend);
          root.friendlist.push({
            'label': friend.name,
            'value': friend.id
          });
        }
        return $('#friendlist').autocomplete({
          'autoFocus': true,
          'source': root.friendlist,
          'select': function(event, ui) {
            $('#friendlist').val(ui.item.value);
            $('#friendlist').submit();
            return setTimeout(function() {
              return $('#friendlist').val('');
            }, 10);
          }
        });
      });
    });
  });

  now.refreshStatus = function(targetuser, newstatus) {
    if (root.email === targetuser) return $('#status').text(newstatus);
  };

  accessPillow = root.accessPillow = function() {
    var friendid;
    friendid = $('#friendlist').val();
    setTimeout(function() {
      return $('#friendlist').val('');
    }, 10);
    console.log(friendid);
    now.getFriendsAllowed(friendid, function(allowedIds) {
      if ((allowedIds == null) || allowedIds.indexOf(myid) === -1) {
        return $('#requestAccess').show();
      }
    });
    return false;
  };

}).call(this);
